static class BadgeEditor {
    var logos = @macro :object {
        var r = {};
        var d = 'data/brand-lib';
        fs.readdirSync('app/' + d).forEach(lambda r[arg.split('.')[0]] = d + '/' + arg);
        return r;
    }();

    private saveFromLibrary(library, file, callback){
        fs.writeFile(file, fs.readFileSync(library), callback);
    }

    public saveFromFile(filename, file, callback){
        fs.writeFile(file, fs.readFileSync(filename), callback);
    }

    public autoupdate(car, force){
        if (!force && !Settings.get('badgeAutoupdate')) return;

        var image = logos[car.data.brand];
        if (image){
            saveFromLibrary(image, car.badge, lambda arg || car.updateBadge());
        }
    }

    public start(car, callback){
        function cb(e){
            if (e){
                ErrorHandler.handled('Cannot save badge icon.', e);
            } else {
                car.updateBadge();
            }
            if (callback) callback();
        }

        var logosHtml = '', carBrand = car.data && car.data.brand;
        for (var brand, file in-object logos){
            logosHtml += '<span class="car-library-element%0" data-file="%2" title="%1" style=\'display:inline-block;width:64px;height:64px;\
                background:center url("%2") no-repeat;background-size:54px\'></span>'(
                (!logos[carBrand] && !logosHtml.length || carBrand === brand) ? ' selected' : '', brand, file);
        }

        var d = new Dialog('Change Badge', [
            '<div style="max-height:70vh;overflow-y:auto;line-height:0">%0</div>'(logosHtml)
        ], function (){
            saveFromLibrary(this.content.find('.selected').data('file'), car.badge, cb);
        }).addButton('Select File', function (){
            var a = document.createElement('input');
            a.type = 'file';
            a.setAttribute('accept', '.png');
            a.onchange = function (){
                if (a.files[0]){
                    saveFromFile(a.files[0].path, car.badge, cb);
                    d.close();
                }
            };
            a.click();
            return false;
        }).onEnd(lambda {
            DragDestination.unregister(ddId);
        });

        var ddId = DragDestination.register('New Badge', function (files){
            if (files[0]){
                saveFromFile(files[0], car.badge, cb);
                d.close();
            }
        });

        d.el.addClass('dark');
        d.content.find('.car-library-element').click(function (){
            $(this.parentNode).find('.selected').removeClass('selected');
            this.classList.add('selected');
        }).dblclick(function (){
            d.buttons.find('[data-id="dialog-ok"]')[0].click();
        });
    }

    function init(){
        Cars
            .on('update.car.data:brand', autoupdate);
    }

    {
        $(init);
    }
}