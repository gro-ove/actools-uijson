static class ViewSettings {
    var _prevFeedback;

    function openDialog(){
        function save(){
            if (acdirVal === false) return false;

            if (acdirVal != null){
                AcDir.set(acdirVal);
            }

            Settings.update(function (s){
                if (!s.yearAutoupdate && yearAutoupdate){
                    setTimeout(lambda new Dialog('Year As Postfix', 
                        'Would you like to add missing years to names now?', lambda {
                        BatchProcessing.process(Cars.list, 'Add missing years to car names');
                    }));
                }

                s.disableTips = disableTips;
                s.badgeAutoupdate = badgeAutoupdate;
                s.yearAutoupdate = yearAutoupdate;
                s.updateDatabase = updateDatabase;
                s.uploadData = uploadData;
                s.updatesCheck = updatesCheck;
                s.updatesSource = updatesSource;

                s.aptShowroom = aptShowroom;
                s.aptMode = aptMode;
                s.aptFilter = aptFilter;
                s.aptDisableSweetFx = aptDisableSweetFx;
                s.aptResize = aptResize;
                s.aptCameraX = aptCameraX;
                s.aptCameraY = aptCameraY;
                s.aptCameraDistance = aptCameraDistance;
                s.aptIncreaseDelays = aptIncreaseDelays;
            });
        }

        var d = new Dialog('Settings', [
            '<h6>Assetto Corsa Folder</h6>',
            '<button id="settings-acdir-select" style="float:right;width:30px">…</button>',
            '<input id="settings-acdir" placeholder="…/Assetto Corsa" style="width:calc(100% - 35px)">',

            '<h6>Editing</h6>',
            '<label><input id="settings-badge-autoupdate" type="checkbox">Update badge with brand</label><br>',
            '<label><input id="settings-year-autoupdate" type="checkbox">Add year to name as postfix if missing</label>',

            '<h6>Tips</h6>',
            '<label><input id="settings-disable-tips" type="checkbox">Disable tips on launch</label>',

            '<h6>Database</h6>',
            '<label><input id="settings-update-database" type="checkbox">Update databases</label><br>',
            '<label><input id="settings-upload-data" type="checkbox">Upload some changes</label>',

            '<h6>Updates</h6>',
            '<label><input id="settings-updates-check" type="checkbox">Check for new versions on launch</label>',
            '<select id="settings-updates-source"><option value="stable">Stable</option><option value="last">Beta</option></select>',

            /*'<h6>Search Provider</h6>',
            '<label><select id="settings-search-provider"><option value="google"></option></select>',*/
        ], save, false).setButton('Save').addButton('User Storage', function (){
            Shell.openItem(DataStorage.getUserContentDir());
            return false;
        }).addButton('Cancel'), c = 0;

        /* acdir */
        var acdirVal;
        function acdirChange(){
            var err = AcDir.check(acdirVal = d.find('#settings-acdir').val());
            $(this).toggleClass('invalid', !!err).attr('title', err || null);
            if (err){
                acdirVal = false;
            }
        }

        d.content.find('#settings-acdir').val(AcDir.root).change(acdirChange);

        d.content.find('#settings-acdir-select').click(function (){
            $('<input type="file" nwdirectory />').attr({
                nwworkingdir: d.content.find('#settings-acdir').val()
            }).change(function (){
                d.content.find('#settings-acdir').val(this.value);
                acdirChange();
            }).click();
        });

        /* editing */
        var badgeAutoupdate = Settings.get('badgeAutoupdate');
        d.content.find('#settings-badge-autoupdate').change(lambda { badgeAutoupdate = this.checked })[0].checked = badgeAutoupdate;

        var yearAutoupdate = Settings.get('yearAutoupdate');
        d.content.find('#settings-year-autoupdate').change(lambda { yearAutoupdate = this.checked })[0].checked = yearAutoupdate;

        /* tips */
        var disableTips = Settings.get('disableTips');
        d.content.find('#settings-disable-tips').change(lambda { disableTips = this.checked })[0].checked = disableTips;

        /* database */
        var updateDatabase = Settings.get('updateDatabase');
        d.content.find('#settings-update-database').change(lambda { updateDatabase = this.checked })[0].checked = updateDatabase;

        var uploadData = Settings.get('uploadData');
        d.content.find('#settings-upload-data').change(lambda { uploadData = this.checked })[0].checked = uploadData;

        /* updates */
        var updatesCheck = Settings.get('updatesCheck');
        d.content.find('#settings-updates-check').change(lambda { updatesCheck = this.checked })[0].checked = updatesCheck;

        var updatesSource = Settings.get('updatesSource');
        d.content.find('#settings-updates-source').change(lambda { updatesSource = this.value })[0].value = updatesSource;

        /* auto-preview tab */
        var apt = d.addTab('Auto-Preview', [
            '<h6>Mode</h6>'
            '<select id="apt-mode">%0</select>'(AcShowroom.modes.map(function (e){
                return '<option value="%0">%1</option>'(e.id, e.name);
            }).join(''))

            '<h6>Showroom</h6>'
            '<select id="apt-showroom"><option value="">Black Showroom (Recommended)</option>%0</select>'(AcShowroom.list.map(function (e){
                return '<option value="%0">%1</option>'(e.id, e.data ? e.data.name : e.id);
            }).join(''))

            '<h6>Filter</h6>'
            '<select id="apt-filter"><option value="">Don\'t change</option>%0</select>'(AcFilters.list.map(function (e){
                return '<option value="%0">%1</option>'(e.id, e.id);
            }).join(''))
            '<label><input id="apt-disable-sweetfx" type="checkbox">Disable SweetFX (Recommended)</label>'

            '<h6>Resize</h6>'
            '<label><input id="apt-resize" type="checkbox">Change size to default 1024×576 (Recommended)</label>'

            '<h6>Camera Position</h6>'
            '<label style="display:inline-block;width:160px;line-height:24px" title="Actually, just simulate mouse move">Rotate X: <input id="apt-camera-x" type="number" step="1" style="width: 80px;float: right;margin-right: 20px;"></label>'
            '<label style="display:inline-block;width:160px;line-height:24px" title="Actually, just simulate mouse move">Rotate Y: <input id="apt-camera-y" type="number" step="1" style="width: 80px;float: right;margin-right: 20px;"></label>'
            '<label style="display:inline-block;width:160px;line-height:24px">Distance: <input id="apt-camera-distance" type="number" step="0.1" style="width: 80px;float: right;margin-right: 20px;"></label>'

            '<h6>Delays</h6>'
            '<label><input id="apt-increase-delays" type="checkbox">Increased delays</label>'

            '<h6>PNG Mode</h6>'
            '<label><input id="apt-png-mode" type="checkbox">Make previews in PNG format (but still save as preview.jpg)</label>'
        ], save).setButton('Save').addButton('Defaults', function (){
            apt.content.find('#apt-mode')[0].value = aptMode = Settings.defaults.aptMode;
            apt.content.toggleClass('apt-nondefmode', aptMode !== 'default');

            apt.content.find('#apt-showroom')[0].value = aptShowroom = Settings.defaults.aptShowroom;
            if (AcFilters.list.length) apt.content.find('#apt-filter')[0].value = aptFilter = Settings.defaults.aptFilter;
            apt.content.find('#apt-disable-sweetfx')[0].checked = aptDisableSweetFx = Settings.defaults.aptDisableSweetFx;
            apt.content.find('#apt-resize')[0].checked = aptResize = Settings.defaults.aptResize;
            apt.content.find('#apt-camera-x')[0].value = aptCameraX = Settings.defaults.aptCameraX;
            apt.content.find('#apt-camera-y')[0].value = aptCameraY = Settings.defaults.aptCameraY;
            apt.content.find('#apt-camera-distance')[0].value = aptCameraDistance = Settings.defaults.aptCameraDistance;
            apt.content.find('#apt-increase-delays')[0].checked = aptIncreaseDelays = Settings.defaults.aptIncreaseDelays;
            apt.content.find('#apt-png-mode')[0].checked = aptPngMode = Settings.defaults.aptPngMode;
            return false;
        }).addButton('Cancel');

        var aptMode = Settings.get('aptMode');
        apt.content.find('#apt-mode').change(lambda {
            aptMode = this.value;
            apt.content.toggleClass('apt-nondefmode', aptMode !== 'default');
        })[0].value = aptMode;
        apt.content.toggleClass('apt-nondefmode', aptMode !== 'default');

        var aptShowroom = Settings.get('aptShowroom');
        apt.content.find('#apt-showroom').change(lambda { aptShowroom = this.value })[0].value = aptShowroom;

        var aptFilter = Settings.get('aptFilter');
        if (AcFilters.list.length){
            var recFilter = apt.content.find('#apt-filter [value="%0"]'(Settings.defaults.aptFilter))[0];
            if (recFilter){
                recFilter.textContent += ' (Recommended)';
            } else {
                $('<option value="%0">%0 (Recommended)</option>'(Settings.defaults.aptFilter)).insertAfter(apt.content.find('#apt-filter option:first-child'));
            }

            apt.content.find('#apt-filter').change(lambda { aptFilter = this.value })[0].value = aptFilter;
        } else {
            apt.content.find('#apt-filter').attr({
                disabled: true,
                title: 'Filters not found',
            })
        }

        var aptDisableSweetFx = Settings.get('aptDisableSweetFx');
        apt.content.find('#apt-disable-sweetfx').change(lambda { aptDisableSweetFx = this.checked })[0].checked = aptDisableSweetFx;

        var aptResize = Settings.get('aptResize');
        apt.content.find('#apt-resize').change(lambda { aptResize = this.checked })[0].checked = aptResize;

        var aptCameraX = Settings.get('aptCameraX');
        apt.content.find('#apt-camera-x').change(lambda { aptCameraX = this.value })[0].value = aptCameraX;

        var aptCameraY = Settings.get('aptCameraY');
        apt.content.find('#apt-camera-y').change(lambda { aptCameraY = this.value })[0].value = aptCameraY;

        var aptCameraDistance = Settings.get('aptCameraDistance');
        apt.content.find('#apt-camera-distance').change(lambda { aptCameraDistance = this.value })[0].value = aptCameraDistance;

        var aptIncreaseDelays = Settings.get('aptIncreaseDelays');
        apt.content.find('#apt-increase-delays').change(lambda { aptIncreaseDelays = this.checked })[0].checked = aptIncreaseDelays;

        var aptPngMode = Settings.get('aptPngMode');
        apt.content.find('#apt-png-mode').change(lambda { aptPngMode = this.checked })[0].checked = aptPngMode;

        /* about tab */
        d.addTab('About', [
            '<h6>Version</h6>'
            '<p id="version">%0</p>'(gui.App.manifest.version)
            '<h6>Details</h6>'
            `<p><a href="#" onclick="Shell.openItem('https://ascobash.wordpress.com/2015/06/14/actools-uijson/')">https://ascobash.wordpress.com/…/actools-uijson/</a></p>`
            '<h6>Author</h6>'
            'x4fab'
        ]).addButton('Feedback', function (){
            feedbackForm();
            return false;
        }).addButton('Check for update', function (){
            var b = this.buttons.find('button:last-child').text('Please wait...').attr('disabled', true);
            CheckUpdate.check();
            CheckUpdate.one('check', lambda (arg){
                b.text('Check again').attr('disabled', null);
                if (arg === 'check:failed'){
                    new Dialog('Check For Update', 'Cannot check for update.');
                } else if (arg !== 'check:done:found'){
                    new Dialog('Check For Update', 'New version not found.');
                }
            });
            return false;
        }).content.find('#version').click(function (){
            if (++c > 10 && !localStorage.developerMode){
                new Dialog('Developer Mode Enabled', 'Don\'t spread it around, ok?', lambda, false);
                localStorage.developerMode = true;
            }
        });
    }

    private feedbackForm(){
        function sendFeedback(v){
            d.buttons.find('button:first-child').text('Please wait...').attr('disabled', true);

            AppServerRequest.sendFeedback(v, lambda {
                d.close();
                if (arg){
                    new Dialog('Cannot Send Feedback', 'Sorry about that.');
                } else {
                    _prevFeedback = null;
                    new Dialog('Feedback Sent', 'Thank you.');
                }
            });
        }

        var d = new Dialog('Feedback', '<textarea style="width:350px;height:200px;resize:none" maxlength="5000"\
                placeholder="If you have any ideas or suggestions please let me know"></textarea>', function (){
            var v = this.content.find('textarea').val().trim();
            if (v) sendFeedback(v);
            return false;
        }, false).setButton('Send').addButton('Cancel').closeOnEnter(false);
        d.content.find('textarea').val(_prevFeedback || '').change(lambda _prevFeedback = this.value);
    }
    
    {
        $('#settings-open')
            .click(openDialog);
    }
}